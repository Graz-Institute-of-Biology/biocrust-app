version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  frontend:
    container_name: frontend
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: biocrust_app_frontend
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`it245151.uni-graz.at`)"
      - "traefik.http.routers.frontend.entrypoints=https"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.domains[0].main=it245151.uni-graz.at"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.frontend.priority=1"

  ml-api:
    build:
      context: .
      dockerfile: ./compose/local/ml-api/Dockerfile
    environment:
      - ML_ENV=production
    image: biocrust_app_local_ml-api
    container_name: biocrust_app_local_ml-api
    restart: unless-stopped
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.ml.rule=Host(`it245151.uni-graz.at`) && PathPrefix(`/ml`)"
        - "traefik.http.routers.ml.entrypoints=https"
        - "traefik.http.routers.ml.tls=true" 
        - "traefik.http.routers.ml.tls.domains[0].main=it245151.uni-graz.at"
        - "traefik.http.services.ml.loadbalancer.server.port=8082"
        - "traefik.http.middlewares.ml-stripprefix.stripprefix.prefixes=/ml"
        - "traefik.http.routers.ml.middlewares=ml-stripprefix"
        - "traefik.http.routers.ml.priority=3"
    depends_on:
      - django
    networks:
      - proxy
    ports:
      - "8082:8082"

  django:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: biocrust_app_local_django
    container_name: biocrust_app_local_django
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`it245151.uni-graz.at`) && PathPrefix(`/django`)"
      - "traefik.http.routers.django.entrypoints=https"
      - "traefik.http.routers.django.tls=true"
      - "traefik.http.routers.django.tls.domains[0].main=it245151.uni-graz.at"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
      - "traefik.http.routers.django.priority=2"

    depends_on:
      - postgres
    volumes:
      - .:/app:z
    networks:
      - proxy
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: biocrust_app_production_postgres
    container_name: biocrust_app_local_postgres
    restart: unless-stopped
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    ports:
      - '5432:5432'
    networks:
      - proxy
    env_file:
      - ./.envs/.local/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: biocrust_app_production_traefik
    container_name: biocrust_app_production_traefik
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - ./compose/production/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./compose/production/traefik/dynamic-conf.yml:/etc/traefik/dynamic-conf.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/traefik/certs:/etc/traefik/certs:ro
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"

  redis:
    image: redis:7
    container_name: biocrust_app_redis
    restart: unless-stopped
    env_file:
      - ./.envs/.local/.redis
    volumes:
      - ./redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - proxy

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: biocrust_app_redis_commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
      - URL_PREFIX=/redis-commander
    env_file:
      - ./.envs/.local/.redis-commander
    networks:
      - proxy
    depends_on:
      - redis
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.redis-commander.rule=Host(`it245151.uni-graz.at`) && PathPrefix(`/redis-commander`)"
        - "traefik.http.routers.redis-commander.entrypoints=https"
        - "traefik.http.routers.redis-commander.tls=true"
        - "traefik.http.services.redis-commander.loadbalancer.server.port=8081"
        - "traefik.http.routers.redis-commander.priority=100"
        # - "traefik.enable=true"
        # - "traefik.http.routers.redis-commander.rule=Host(`it245151.uni-graz.at`) && PathPrefix(`/redis-commander`)"
        # - "traefik.http.routers.redis-commander.entrypoints=https"
        # - "traefik.http.routers.redis-commander.tls=true" 
        # - "traefik.http.routers.redis-commander.tls.domains[0].main=it245151.uni-graz.at"
        # - "traefik.http.services.redis-commander.loadbalancer.server.port=8081"
        # - "traefik.http.middlewares.redis-commander-stripprefix.stripprefix.prefixes=/redis-commander"
        # - "traefik.http.routers.redis-commander.middlewares=redis-commander-stripprefix"
        # - "traefik.http.routers.redis-commander.priority=4"


  # awscli:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/aws/Dockerfile
  #   env_file:
  #     - ./.envs/.production/.django
  #   volumes:
  #     - production_postgres_data_backups:/backups:z

networks:
  proxy:
    external: true