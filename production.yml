version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  frontend:
    container_name: frontend
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: biocrust_app_frontend
    depends_on:
      - django
    volumes:
      - ./frontend/nginx:/etc/nginx/conf.d
    expose:
      - 80

  ml-api:
    build:
      context: .
      dockerfile: ./compose/local/ml-api/Dockerfile
    environment:
      - ML_ENV=staging
    image: biocrust_app_local_ml-api
    container_name: biocrust_app_local_ml-api
    depends_on:
      - django
    ports:
      - "8082:8082"

  django:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: biocrust_app_local_django
    container_name: biocrust_app_local_django
    depends_on:
      - postgres
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: biocrust_app_production_postgres
    container_name: biocrust_app_local_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    ports:
      - '5432:5432'
    env_file:
      - ./.envs/.local/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: biocrust_app_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'

  # redis:
  #   image: redis:6

  # awscli:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/aws/Dockerfile
  #   env_file:
  #     - ./.envs/.production/.django
  #   volumes:
  #     - production_postgres_data_backups:/backups:z
